{"version":3,"sources":["components/login/login.js","components/add-story/add-story.js","components/view-story/view-story.js","components/dashboard/dashboard.js","shared/loader/loader.js","components/home/home.js","shared/header/header.js","app.js","serviceWorker.js","index.js"],"names":["Login","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rSelected","onRemmemberMeClick","bind","assertThisInitialized","inherits","createClass","key","value","selected","setState","_this2","react_default","a","createElement","className","Form","FormGroup","Label","for","Input","type","name","id","placeholder","check","onClick","active","Button","color","size","block","Component","AddStory","editorState","EditorState","createEmpty","storyHeader","storyPicture","storyPictureName","focus","refs","editor","handleStoryChange","handleKeyCommand","_handleKeyCommand","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","handleSubmit","handleHeadingChange","handlePictureChange","command","newState","RichUtils","e","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","alert","stateToHTML","getCurrentContent","document","getElementById","click","event","target","eventLength","split","length","eventVar","contentState","hasText","getBlockMap","first","getType","onChange","hidden","readOnly","handlePicture","add_story_BlockStyleControls","onToggle","add_story_InlineStyleControls","Draft","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","ref","spellCheck","Row","Col","CODE","backgroundColor","fontFamily","fontSize","padding","StyleButton","preventDefault","style","onMouseDown","label","React","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","add_story_StyleButton","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","ViewStory","listStory","error","isLoaded","fetch","then","res","json","result","_this$state","message","story","alt","src","title","Dashboard","toggle","activeTab","tab","xs","Nav","tabs","NavItem","classnames","NavLink","TabContent","TabPane","tabId","view_story_ViewStory","add_story_AddStory","Loader","apply","arguments","Home","BrowserRouter","react","fallback","loader_Loader","Switch","Route","exact","path","component","Header","href","App","Container","header_Header","home_home","Boolean","window","location","hostname","match","ReactDOM","render","src_app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c60011a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport './login.css';\r\n\r\nexport class Login extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = { rSelected: false };\r\n\r\n    this.onRemmemberMeClick = this.onRemmemberMeClick.bind(this);\r\n  }\r\n\r\n  onRemmemberMeClick(selected) {\r\n    this.setState({ rSelected: !selected });\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"login float-right\">\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"emailId\">Email</Label>\r\n            <Input type=\"email\" name=\"email\" id=\"emailId\" placeholder=\"Email\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"checkbox\" onClick={() => this.onRemmemberMeClick()} active={this.state.rSelected ? 'true' : 'false'}/>{' '}\r\n              Remmember Me\r\n          </Label>\r\n          </FormGroup>\r\n          <Button color=\"primary\" size=\"lg\" block className=\"form-submit-button\">Submit</Button>\r\n        </Form>\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Editor, EditorState, RichUtils, getDefaultKeyBinding } from 'draft-js';\r\nimport {stateToHTML} from 'draft-js-export-html';\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\r\nimport './add-story.css';\r\n\r\nexport class AddStory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            editorState: EditorState.createEmpty(),\r\n            storyHeader: '',\r\n            storyPicture: '',\r\n            storyPictureName: ''\r\n        };\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.handleStoryChange = (editorState) => this.setState(\r\n            { editorState }\r\n        );\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleHeadingChange = this.handleHeadingChange.bind(this);\r\n        this.handlePictureChange = this.handlePictureChange.bind(this);\r\n    }\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.handleStoryChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(\r\n                e,\r\n                this.state.editorState,\r\n                4, /* maxDepth */\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n                this.handleStoryChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n    _toggleBlockType(blockType) {\r\n        this.handleStoryChange(\r\n            RichUtils.toggleBlockType(\r\n                this.state.editorState,\r\n                blockType\r\n            )\r\n        );\r\n    }\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.handleStoryChange(\r\n            RichUtils.toggleInlineStyle(\r\n                this.state.editorState,\r\n                inlineStyle\r\n            )\r\n        );\r\n    }\r\n    handleSubmit() {\r\n        // alert('Story Header' + this.state.storyHeader);\r\n        // alert('Story Picture' + this.state.storyPicture);\r\n        alert('Editor State' + stateToHTML(this.state.editorState.getCurrentContent()));\r\n    }\r\n    handlePicture() {\r\n        document.getElementById('pictureId').click();\r\n    }\r\n    handleHeadingChange(event) {\r\n        this.setState({storyHeader: event.target.value});\r\n    }\r\n    handlePictureChange(event) {\r\n        var eventLength = event.target.value.split('\\\\').length;\r\n        var eventVar = event.target.value.split('\\\\')[eventLength - 1];\r\n        this.setState({storyPicture: event.target.value, storyPictureName: eventVar});\r\n    }\r\n    render() {\r\n        const { editorState } = this.state;\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = 'RichEditor-editor';\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n                className += ' RichEditor-hidePlaceholder';\r\n            }\r\n        }\r\n        return (\r\n            <Form>\r\n                <h2>Add Your Stories:</h2>\r\n                <FormGroup>\r\n                    <Label for=\"headingId\">Header</Label>\r\n                    <Input type=\"text\" value={this.state.storyHeader} onChange={this.handleHeadingChange} name=\"heading\" id=\"headingId\" placeholder=\"Heading...\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"clear-fix\">\r\n                    <Label for=\"pictureId\" className=\"clear-fix\">Picture</Label>\r\n                    <Input type=\"file\" value={this.state.storyPicture} onChange={this.handlePictureChange} name=\"picture\" id=\"pictureId\" placeholder=\"Upload...\" hidden/>\r\n                    <Input type=\"text\" value={this.state.storyPictureName} name=\"PicContainer\" placeholder=\"Upload\" className=\"browse-input\" readOnly/>\r\n                    <Button color=\"primary\" onClick={this.handlePicture} className=\"browse-button\">Browse</Button>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"story\">Story</Label>\r\n                    <div className=\"RichEditor-root\">\r\n                        <BlockStyleControls\r\n                            editorState={editorState}\r\n                            onToggle={this.toggleBlockType}\r\n                        />\r\n                        <InlineStyleControls\r\n                            editorState={editorState}\r\n                            onToggle={this.toggleInlineStyle}\r\n                        />\r\n                        <div className={className} onClick={this.focus}>\r\n                            <Editor\r\n                                blockStyleFn={getBlockStyle}\r\n                                customStyleMap={styleMap}\r\n                                editorState={editorState}\r\n                                handleKeyCommand={this.handleKeyCommand}\r\n                                keyBindingFn={this.mapKeyToEditorCommand}\r\n                                onChange={this.handleStoryChange}\r\n                                ref=\"editor\"\r\n                                spellCheck={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n                <Row className=\"mb-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button color=\"secondary\">Preview</Button>\r\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Add</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case 'blockquote': return 'RichEditor-blockquote';\r\n        default: return null;\r\n    }\r\n}\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n    render() {\r\n        let className = 'RichEditor-styleButton';\r\n        if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n        }\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n                {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\nconst BLOCK_TYPES = [\r\n    { label: 'H1', style: 'header-one' },\r\n    { label: 'H2', style: 'header-two' },\r\n    { label: 'H3', style: 'header-three' },\r\n    { label: 'H4', style: 'header-four' },\r\n    { label: 'H5', style: 'header-five' },\r\n    { label: 'H6', style: 'header-six' },\r\n    { label: 'Blockquote', style: 'blockquote' },\r\n    { label: 'UL', style: 'unordered-list-item' },\r\n    { label: 'OL', style: 'ordered-list-item' },\r\n    { label: 'Code Block', style: 'code-block' },\r\n];\r\nconst BlockStyleControls = (props) => {\r\n    const { editorState } = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getType();\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nvar INLINE_STYLES = [\r\n    { label: 'Bold', style: 'BOLD' },\r\n    { label: 'Italic', style: 'ITALIC' },\r\n    { label: 'Underline', style: 'UNDERLINE' },\r\n    { label: 'Monospace', style: 'CODE' },\r\n];\r\nconst InlineStyleControls = (props) => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col, Button } from 'reactstrap';\r\nimport './view-story.css';\r\n\r\nexport class ViewStory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listStory: [],\r\n            error: null,\r\n            isLoaded: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api-story-teller.herokuapp.com/api/stories?page=0&limit=20')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        listStory: result\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error: error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n    render() {\r\n        const { listStory, error, isLoaded } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <section>\r\n                    <h2>Stories:</h2>\r\n                    {listStory.map((story) => (\r\n                        <Col  key={story.id} className=\"story-block\">\r\n                            <article className=\"user-story-container\">\r\n                                <aside className=\"user-image\">\r\n                                    <img alt=\"User\" src=\"default.png\"></img>\r\n                                </aside>\r\n                                <section className=\"story-description\">\r\n                                    <h4>{story.title}</h4>\r\n                                    <div className=\"story-lines\">\r\n                                        <div className=\"story-image-container\">\r\n                                            <img alt=\"Default\" src=\"default.png\"></img>\r\n                                        </div>\r\n                                        {story.story}\r\n                                    </div>\r\n                                    <Button color=\"primary\" className=\"read-more-button\">Read More</Button>\r\n                                </section>\r\n                            </article>\r\n                        </Col>\r\n                    ))}\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport './dashboard.css';\r\nimport { AddStory } from '../add-story/add-story';\r\nimport { ViewStory } from '../view-story/view-story';\r\n\r\nexport class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      activeTab: 'viewStory'\r\n    };\r\n  }\r\n\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"dashboard\">\r\n        <Col xs=\"12\" className=\"p-0 float-left\">\r\n          <Nav tabs className=\"side-nav\">\r\n            <NavItem className={classnames({ active: this.state.activeTab === 'viewStory' })} onClick={() => { this.toggle('viewStory'); }}>\r\n              <NavLink>\r\n                View Stories\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className={classnames({ active: this.state.activeTab === 'addStory' })} onClick={() => { this.toggle('addStory'); }}>\r\n              <NavLink>\r\n                Add New Story\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Col>\r\n        <Col xs=\"12\" className=\"float-left\">\r\n          <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"viewStory\">\r\n              <ViewStory/>\r\n            </TabPane>\r\n            <TabPane tabId=\"addStory\">\r\n              <AddStory/>\r\n            </TabPane>\r\n          </TabContent>\r\n        </Col>\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './loader.css';\r\n\r\nexport class Loader extends Component {\r\n  render() {\r\n    return (<div>Loading.....</div>);\r\n  }\r\n}","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport React, { Component, Suspense } from 'react';\r\nimport './home.css';\r\nimport { Login } from '../login/login';\r\nimport { Dashboard } from '../dashboard/dashboard';\r\nimport { Loader } from '../../shared/loader/loader';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Router>\r\n            <Suspense fallback={<Loader/>}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Dashboard}/>\r\n                    <Route path=\"/login\" component={Login}/>\r\n                    <Route component={Dashboard}/>\r\n                </Switch>\r\n            </Suspense>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport './header.css';\r\nimport { Button, Col } from 'reactstrap';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-logo-section\">\r\n          <Col xs=\"12\" className=\"p-0\">\r\n            <div className=\"logo-wrapper\">\r\n              <div className=\"image-wrapper\">\r\n                <img alt=\"Logo\" src=\"Logo.png\"></img>\r\n              </div>\r\n            </div>\r\n            <aside className=\"registration-links\">\r\n              <a href=\"Jasvascript:Void(0)\" className=\"log-in\">LOG IN</a>\r\n              <Button color=\"primary\">Register</Button>\r\n            </aside>\r\n          </Col>\r\n          <div className=\"site-name\">\r\n            <span>Story</span>\r\n            <span>Teller</span>\r\n          </div>          \r\n        </div>\r\n        <div className=\"header-info-container\">\r\n          <span>“A good story needs</span><br/>\r\n          <span className=\"gap-provider\">only a good storyteller”</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container, Row } from 'reactstrap';\nimport './app.css';\nimport Home from './components/home/home';\nimport Header from './shared/header/header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Row>\n          <Container className=\"app-body\">\n            <header><Header/></header>\n            <section><Home /></section>\n          </Container>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}